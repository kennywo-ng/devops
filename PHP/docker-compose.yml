version: '3.3'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/ssl:/etc/nginx/ssl/
      - /var/log/nginx:/var/log/nginx
    networks:
      - net

  api:
    image: php:7.4-fpm-pdo
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    #restart: unless-stopped
    volumes:
      - ./repo:/var/www/html
      - ./php/custom-php.ini:/usr/local/etc/php/conf.d/custom-php.ini
    environment:
      - APPLICATION_ENV=staging   #value = staging / production
    networks:
      - net

  api-second:
    image: php:8.0-fpm-pdo
    build:
      context: .
      dockerfile: PHP8Dockerfile
    container_name: api-second
    expose:
      - "9000"
    #restart: unless-stopped
    volumes:
      - ./repo2:/var/www/html
      - ./php/custom-php.ini:/usr/local/etc/php/conf.d/custom-php.ini
    environment:
      - APPLICATION_ENV=staging   #value = staging / production
    working_dir: /var/www/html
    command: sh -c "php artisan optimize:clear && composer update && php-fpm"
    networks:
      - net

  admin:
    image: php:7.4-fpm-pdo
    build:
      context: .
      dockerfile: Dockerfile
    container_name: admin
    #restart: unless-stopped
    volumes:
      - ./repo3:/var/www/html
      - ./php/custom-php.ini:/usr/local/etc/php/conf.d/custom-php.ini
    environment:
      - APPLICATION_ENV=staging   #value = staging / production
    expose:
      - 9000
    networks:
      - net


#FE
  web-second-1:
    image: node:18.16
    container_name: web-second-1
    #restart: unless-stopped
    networks:
      - net
    expose:
      - 3000
    working_dir: /app/
    volumes:
      - ./web-second-1/repo4/:/app
    command: sh -c "npm install && npm run deploy"
    environment:
      - npm_config_project=project_name   #merchant code, not sure check with FE
      - npm_config_env=stage             #value = stage / prod

  web-second-1:
    image: node:18.16
    container_name: web-second-1
    #restart: unless-stopped
    networks:
      - net
    expose:
      - 3000
    working_dir: /app/
    volumes:
      - ./web-second-2/repo4/:/app/
    command: sh -c "npm install && npm run deploy"
    environment:
      - npm_config_project=project_name    #merchant code, not sure check with FE
      - npm_config_env=stage             #value = dev/ stage / prod

  web1:
    image: node:18.16
    container_name: web1
    #restart: unless-stopped
    networks:
      - net
    expose:
      - 3000
    working_dir: /app/
    volumes:
      - ./web1/repo5/web:/app/
    command: sh -c "npm install && npm run deploy"
    environment:
      - npm_config_project=project_name   #merchant code, not sure check with FE
      - npm_config_env=stage      #value = stage / prod

  web2:
    image: node:18.16
    container_name: web2
    #restart: unless-stopped
    networks:
      - net
    expose:
      - 3000
    working_dir: /app/
    volumes:
      - ./web2/repo5/web:/app/
    command: sh -c "npm install && npm run deploy"
    environment:
      - npm_config_project=project_name  #merchant code, not sure check with FE
      - npm_config_env=stage        #value = stage / prod



networks:
  net:
   driver: bridge